- name: "Gather installed package facts"
  package_facts:
    manager: "auto"

- name: "get system infos"
  block:
    - name: Get OS name
      command: uname -s
      register: os_name
      changed_when: false

    - name: ensure that the remote is a linux system
      assert: 
        that: "os_name.stdout == 'Linux'" 

    - name: Get release name
      command: lsb_release -cs
      register: os_release
      changed_when: false

    - name: Get OS arch
      command: uname -m
      register: os_arch
      changed_when: false

    - name: Get OS flavor
      command: lsb_release -is
      register: os_flavor
      changed_when: false

  when: "'docker-ce' not in ansible_facts.packages"

- name: install docker
  block:
  - name: Install docker dependencies
    apt: 
      name: ["apt-transport-https", "ca-certificates", "gnupg-agent", "software-properties-common"]
      state: present
      update_cache: yes

  - name: Add Docker GPG apt Key
    apt_key:
      url: https://download.docker.com/{{ os_name.stdout|lower }}/{{ os_flavor.stdout|lower }}/gpg
      state: present

  - name: Add docker repository
    apt_repository: 
      repo: deb https://download.docker.com/{{ os_name.stdout|lower }}/{{ os_flavor.stdout|lower }} {{ os_release.stdout }} stable
      state: present

  - name: Update and install docker
    apt: 
      name: docker-ce
      state: present 
      update_cache: yes

  when: "'docker-ce' not in ansible_facts.packages"

- name: install python3-pip
  apt:
    name: ["python3-pip", "python3-setuptools"]
    state: present
    update_cache: yes
  when: "'python3-pip' not in ansible_facts.packages"


- name: install pip docker module to control docker
  pip:
    name:
      - docker
    executable: /usr/bin/pip3
